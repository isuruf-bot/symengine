/* Generated by re2c 1.1.1 on Wed Jul 31 08:14:34 2019 */
#line 1 "tok2.re"
#include <stdio.h>

enum num_t { ERR, OPERATOR, POW, LE, EQ, GE, IDENTIFIER, NUMERIC,
    IMPLICIT_MUL};

static num_t lex(const char *YYCURSOR)
{
    const char *YYMARKER;
    
#line 13 "tok2.cpp"
{
	char yych;
	yych = *YYCURSOR;
	switch (yych) {
	case 0x00:
	case 0x01:
	case 0x02:
	case 0x03:
	case 0x04:
	case 0x05:
	case 0x06:
	case 0x07:
	case 0x08:
	case '\t':
	case '\n':
	case '\v':
	case '\f':
	case '\r':
	case 0x0E:
	case 0x0F:
	case 0x10:
	case 0x11:
	case 0x12:
	case 0x13:
	case 0x14:
	case 0x15:
	case 0x16:
	case 0x17:
	case 0x18:
	case 0x19:
	case 0x1A:
	case 0x1B:
	case 0x1C:
	case 0x1D:
	case 0x1E:
	case 0x1F:
	case ' ':
	case '!':
	case '"':
	case '#':
	case '$':
	case '%':
	case '\'':
	case ':':
	case ';':
	case '?':
	case '[':
	case '\\':
	case ']':
	case '`':
	case '{':
	case '}':
	case 0x7F:	goto yy2;
	case '&':
	case '(':
	case ')':
	case '+':
	case ',':
	case '-':
	case '/':
	case '^':
	case '|':
	case '~':	goto yy4;
	case '*':	goto yy6;
	case '.':	goto yy7;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy8;
	case '<':	goto yy11;
	case '=':	goto yy12;
	case '>':	goto yy13;
	case '@':	goto yy14;
	default:	goto yy16;
	}
yy2:
	++YYCURSOR;
yy3:
#line 25 "tok2.re"
	{ return ERR; }
#line 100 "tok2.cpp"
yy4:
	++YYCURSOR;
yy5:
#line 26 "tok2.re"
	{ return OPERATOR; }
#line 106 "tok2.cpp"
yy6:
	yych = *++YYCURSOR;
	switch (yych) {
	case '*':	goto yy14;
	default:	goto yy5;
	}
yy7:
	yych = *++YYCURSOR;
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy19;
	default:	goto yy3;
	}
yy8:
	yych = *++YYCURSOR;
	switch (yych) {
	case 0x00:
	case 0x01:
	case 0x02:
	case 0x03:
	case 0x04:
	case 0x05:
	case 0x06:
	case 0x07:
	case 0x08:
	case '\t':
	case '\n':
	case '\v':
	case '\f':
	case '\r':
	case 0x0E:
	case 0x0F:
	case 0x10:
	case 0x11:
	case 0x12:
	case 0x13:
	case 0x14:
	case 0x15:
	case 0x16:
	case 0x17:
	case 0x18:
	case 0x19:
	case 0x1A:
	case 0x1B:
	case 0x1C:
	case 0x1D:
	case 0x1E:
	case 0x1F:
	case ' ':
	case '!':
	case '"':
	case '#':
	case '$':
	case '%':
	case '&':
	case '\'':
	case '(':
	case ')':
	case '*':
	case '+':
	case ',':
	case '-':
	case '/':
	case ':':
	case ';':
	case '<':
	case '=':
	case '>':
	case '?':
	case '@':
	case '[':
	case '\\':
	case ']':
	case '^':
	case '`':
	case '{':
	case '|':
	case '}':
	case '~':
	case 0x7F:	goto yy10;
	case '.':	goto yy21;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy8;
	case 'E':
	case 'e':	goto yy25;
	default:	goto yy22;
	}
yy10:
#line 32 "tok2.re"
	{ return NUMERIC; }
#line 213 "tok2.cpp"
yy11:
	yych = *++YYCURSOR;
	switch (yych) {
	case '=':	goto yy26;
	default:	goto yy5;
	}
yy12:
	yych = *++YYCURSOR;
	switch (yych) {
	case '=':	goto yy28;
	default:	goto yy3;
	}
yy13:
	yych = *++YYCURSOR;
	switch (yych) {
	case '=':	goto yy30;
	default:	goto yy5;
	}
yy14:
	++YYCURSOR;
#line 27 "tok2.re"
	{ return POW; }
#line 236 "tok2.cpp"
yy16:
	yych = *++YYCURSOR;
	switch (yych) {
	case 0x00:
	case 0x01:
	case 0x02:
	case 0x03:
	case 0x04:
	case 0x05:
	case 0x06:
	case 0x07:
	case 0x08:
	case '\t':
	case '\n':
	case '\v':
	case '\f':
	case '\r':
	case 0x0E:
	case 0x0F:
	case 0x10:
	case 0x11:
	case 0x12:
	case 0x13:
	case 0x14:
	case 0x15:
	case 0x16:
	case 0x17:
	case 0x18:
	case 0x19:
	case 0x1A:
	case 0x1B:
	case 0x1C:
	case 0x1D:
	case 0x1E:
	case 0x1F:
	case ' ':
	case '!':
	case '"':
	case '#':
	case '$':
	case '%':
	case '&':
	case '\'':
	case '(':
	case ')':
	case '*':
	case '+':
	case ',':
	case '-':
	case '.':
	case '/':
	case ':':
	case ';':
	case '<':
	case '=':
	case '>':
	case '?':
	case '@':
	case '[':
	case '\\':
	case ']':
	case '^':
	case '`':
	case '{':
	case '|':
	case '}':
	case '~':
	case 0x7F:	goto yy18;
	default:	goto yy16;
	}
yy18:
#line 31 "tok2.re"
	{ return IDENTIFIER; }
#line 310 "tok2.cpp"
yy19:
	yych = *++YYCURSOR;
yy20:
	switch (yych) {
	case 0x00:
	case 0x01:
	case 0x02:
	case 0x03:
	case 0x04:
	case 0x05:
	case 0x06:
	case 0x07:
	case 0x08:
	case '\t':
	case '\n':
	case '\v':
	case '\f':
	case '\r':
	case 0x0E:
	case 0x0F:
	case 0x10:
	case 0x11:
	case 0x12:
	case 0x13:
	case 0x14:
	case 0x15:
	case 0x16:
	case 0x17:
	case 0x18:
	case 0x19:
	case 0x1A:
	case 0x1B:
	case 0x1C:
	case 0x1D:
	case 0x1E:
	case 0x1F:
	case ' ':
	case '!':
	case '"':
	case '#':
	case '$':
	case '%':
	case '&':
	case '\'':
	case '(':
	case ')':
	case '*':
	case '+':
	case ',':
	case '-':
	case '.':
	case '/':
	case ':':
	case ';':
	case '<':
	case '=':
	case '>':
	case '?':
	case '@':
	case '[':
	case '\\':
	case ']':
	case '^':
	case '`':
	case '{':
	case '|':
	case '}':
	case '~':
	case 0x7F:	goto yy10;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy19;
	case 'E':
	case 'e':	goto yy25;
	default:	goto yy22;
	}
yy21:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'E':
	case 'e':	goto yy22;
	default:	goto yy20;
	}
yy22:
	yych = *++YYCURSOR;
yy23:
	switch (yych) {
	case 0x00:
	case 0x01:
	case 0x02:
	case 0x03:
	case 0x04:
	case 0x05:
	case 0x06:
	case 0x07:
	case 0x08:
	case '\t':
	case '\n':
	case '\v':
	case '\f':
	case '\r':
	case 0x0E:
	case 0x0F:
	case 0x10:
	case 0x11:
	case 0x12:
	case 0x13:
	case 0x14:
	case 0x15:
	case 0x16:
	case 0x17:
	case 0x18:
	case 0x19:
	case 0x1A:
	case 0x1B:
	case 0x1C:
	case 0x1D:
	case 0x1E:
	case 0x1F:
	case ' ':
	case '!':
	case '"':
	case '#':
	case '$':
	case '%':
	case '&':
	case '\'':
	case '(':
	case ')':
	case '*':
	case '+':
	case ',':
	case '-':
	case '.':
	case '/':
	case ':':
	case ';':
	case '<':
	case '=':
	case '>':
	case '?':
	case '@':
	case '[':
	case '\\':
	case ']':
	case '^':
	case '`':
	case '{':
	case '|':
	case '}':
	case '~':
	case 0x7F:	goto yy24;
	default:	goto yy22;
	}
yy24:
#line 33 "tok2.re"
	{ return IMPLICIT_MUL; }
#line 475 "tok2.cpp"
yy25:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '+':
	case '-':	goto yy32;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy34;
	default:	goto yy23;
	}
yy26:
	++YYCURSOR;
#line 28 "tok2.re"
	{ return LE; }
#line 497 "tok2.cpp"
yy28:
	++YYCURSOR;
#line 30 "tok2.re"
	{ return EQ; }
#line 502 "tok2.cpp"
yy30:
	++YYCURSOR;
#line 29 "tok2.re"
	{ return GE; }
#line 507 "tok2.cpp"
yy32:
	yych = *++YYCURSOR;
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy34;
	default:	goto yy33;
	}
yy33:
	YYCURSOR = YYMARKER;
	goto yy24;
yy34:
	yych = *++YYCURSOR;
	switch (yych) {
	case 0x00:
	case 0x01:
	case 0x02:
	case 0x03:
	case 0x04:
	case 0x05:
	case 0x06:
	case 0x07:
	case 0x08:
	case '\t':
	case '\n':
	case '\v':
	case '\f':
	case '\r':
	case 0x0E:
	case 0x0F:
	case 0x10:
	case 0x11:
	case 0x12:
	case 0x13:
	case 0x14:
	case 0x15:
	case 0x16:
	case 0x17:
	case 0x18:
	case 0x19:
	case 0x1A:
	case 0x1B:
	case 0x1C:
	case 0x1D:
	case 0x1E:
	case 0x1F:
	case ' ':
	case '!':
	case '"':
	case '#':
	case '$':
	case '%':
	case '&':
	case '\'':
	case '(':
	case ')':
	case '*':
	case '+':
	case ',':
	case '-':
	case '.':
	case '/':
	case ':':
	case ';':
	case '<':
	case '=':
	case '>':
	case '?':
	case '@':
	case '[':
	case '\\':
	case ']':
	case '^':
	case '`':
	case '{':
	case '|':
	case '}':
	case '~':
	case 0x7F:	goto yy10;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy34;
	default:	goto yy22;
	}
}
#line 34 "tok2.re"

    // TODO: [\n\t ] -> empty / ignore
    // TODO: save strings to dval
    // TODO: read from a file
    // TODO: read all tokens from the same string
}

int main(int argc, char **argv)
{
    for (int i = 1; i < argc; ++i) {
        switch (lex(argv[i])) {
            case ERR: printf("error\n"); break;
            case OPERATOR: printf("OPERATOR\n"); break;
            case POW: printf("POW\n"); break;
            case LE: printf("LE\n"); break;
            case EQ: printf("EQ\n"); break;
            case GE: printf("GE\n"); break;
            case IDENTIFIER: printf("IDENTIFIER\n"); break;
            case NUMERIC: printf("NUMERIC\n"); break;
            case IMPLICIT_MUL: printf("IMPLICIT_MUL\n"); break;
        }
    }
    return 0;
}
